<?php
/**
 * Copyright 2013 pixeltricks GmbH
 *
 * This file is part of SilverCart.
 *
 * SilverCart is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * SilverCart is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with SilverCart.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Extends the SilvercartOrderPosition object with voucher specific fields and methods.
 *
 * @package Silvercart
 * @package Vouchers
 * @author Sebastian Diel <sdiel@pixeltricks.de>
 * @since 02.12.2013
 * @copyright 2013 pixeltricks GmbH
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 */
class SilvercartVoucherOrder extends DataObjectDecorator {

    /**
     * Creates a voucher if there is an active auto voucher generator.
     *
     * @param SilvercartShoppingCart $cart Cart to get information from.
     * 
     * @return void
     * 
     * @author Sebastian Diel <sdiel@pixeltricks.de>
     * @since 02.12.2013
     */
    public function onAfterConvertShoppingCartPositionsToOrderPositions(SilvercartShoppingCart $cart) {
        
        if ($cart->hasAutoGeneratedVoucher()) {
            $generator = $cart->getAutoVoucherGenerator();
            /* @var $generator SilvercartAutoVoucherGenerator */
            $order          = $this->owner;
            $currentVoucher = $generator->getCurrentVoucher();
            $productTitle   = '';
            $productNumber  = '';
            /* @var $order SilvercartOrder */
            
            $price = new Money();
            $price->setAmount(0);
            $price->setCurrency($order->AmountTotal->getCurrency());
            
            if ($currentVoucher->IsNatural) {
                $productTitle  = _t('SilvercartAutoVoucherGenerator.ForFree') . ': ' . $currentVoucher->NaturalProductTitle;
                $productNumber = $currentVoucher->NaturalProductNumber;
            } else {
                $voucher = $generator->generateVoucher();
                if (!is_null($voucher)) {
                    $productTitle  = _t('SilvercartAutoVoucherGenerator.POSITION_TITLE') . '<br/>' . PHP_EOL;
                    $productTitle .= sprintf(_t('SilvercartAutoVoucherGenerator.POSITION_DESCRIPTION_1'), $voucher->value->Nice()) . '<br/>' . PHP_EOL;
                    $productTitle .= sprintf(_t('SilvercartAutoVoucherGenerator.POSITION_DESCRIPTION_2'), $voucher->code);
                }
            }
            
            if (!empty($productTitle)) {
                $voucherPosition = new SilvercartOrderPosition();
                $voucherPosition->Price                 = clone $price;
                $voucherPosition->PriceTotal            = clone $price;
                $voucherPosition->Tax                   = 0;
                $voucherPosition->TaxTotal              = 0;
                $voucherPosition->TaxRate               = 0;
                $voucherPosition->ProductDescription    = '';
                $voucherPosition->Quantity              = 1;
                $voucherPosition->Title                 = $productTitle;
                $voucherPosition->ProductNumber         = $productNumber;
                $voucherPosition->numberOfDecimalPlaces = 0;
                $voucherPosition->SilvercartOrderID     = $order->ID;
                $voucherPosition->write();
            }
            
        }
        
    }
}
